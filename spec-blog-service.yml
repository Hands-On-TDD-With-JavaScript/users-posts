openapi: 3.0.2
info:
  version: 0.0.1
  title: Blog Service API
  description: A Blogging API
  license:
    name: General Public License v3
    url: https://www.gnu.org/licenses/gpl-3.0.en.html

servers:
  - url: dev.blogapi.local
    description: The local dev server API
  - url: qa.blogapi.local
    description: The QA server API
  - url: prod.blogapi.local
    description: The PRD server API

paths:
  /users:
    get:
      responses:
        # We never get a 404 for /users. The endpoint is always there.
        # What can happen is for it to return an empty list of users,
        # but never a 404.
        '200':
          description: >-
            A list of users. The endpoint may return a 200 OK empty list
            of users, but never a 404 status code.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Users'
              examples:
                Empty:
                  value: []
                Non-Empty:
                  value:
                    - id: 1
                      name: Yoda
                      role: Jedi Master
                    - id: 2
                      name: Ahsoka Tano
                      role: Padawan
  /users/{userId}:
    parameters:
      - name: userId
        description: The user's ID.
        in: path
        required: true
        schema:
          type: number
          format: int32
        example: 1

    get:
      responses:

        200:
          description: A user with the given ID.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/User'
              examples:
                Yoda:
                  value:
                    id: 1
                    name: Yoda
                    role: Jedi Master
                Ahsoka:
                  value:
                    id: 2
                    name: Ahsoka Tano
                    role: Padawan

        404:
          description: When a user with the given ID is not found.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/UserNotFound'


  /users/{userId}/posts:
    parameters:
      - name: userId
        description: The user's ID.
        in: path
        required: true
        schema:
          type: number
          format: int32
        example: 1

    get:
      responses:
        200:
          description: A user's posts, if any.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Posts'
              examples:
                User Without Posts:
                  value: []
                User With Posts:
                  value:
                    - id: 1
                      user_id: 1
                      title: Trying or Doing⃭‽
                      text: Do, or do not. There is no try (and no catch).
                    - id: 2
                      user_id: 1
                      title: Fear and The Dark Side
                      text: >-
                        Fear is the path to the dark side. Fear leads to anger.
                        Anger leads to hate. Hate leads to suffering.

components:
  schemas:

    UserNotFound:
      properties:
        message:
          type: string
          example: User with id {userId} not found.

    User:
      properties:
        id:
          type: number
          example: 1
        name:
          type: string
          example: Yoda
        role:
          type: string
          example: Jedi Master

    Users:
      type: array
      items:
        $ref: '#/components/schemas/User'

    Post:
      properties:
        id:
          type: number
          example: 1
        user_id:
          type: number
          example: 1
        title:
          type: string
          example: "The Ways of The Force"
        text:
          type: string
          example: "First, you must unlearn what you have learned."

    Posts:
      type: array
      items:
        $ref: '#/components/schemas/Post'


# The End
